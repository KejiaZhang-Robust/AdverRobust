# def loss_fn(X, y_true):
  
#   # 图像分类损失
#   criterion = nn.CrossEntropyLoss() 
#   L_cls = criterion(model(X), y_true)
  
#   # 低通滤波
#   X_fft = fft.fft2(X)
#   HX_fft = low_pass_DFT_pytorch(X_fft)
#   HX = fft.ifft2(HX_fft).real
  
#   # 高低频损失
#   high_freq = (X - HX)**2
#   low_freq = HX**2
#   L_freq = (high_freq.sum() / low_freq.sum() - alpha)**2
  
#   # 总损失
#   loss = L_cls + lambda*L_freq
  
#   return loss